/*
 * Copyright 2017 Rundeck, Inc. (http://rundeck.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


def bintrayUser = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
def bintrayKey = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') :
        System.getenv('BINTRAY_API_KEY')
def bintrayUserOrg = project.hasProperty('bintrayUserOrg') ? project.property('bintrayUserOrg') :
        System.getenv('BINTRAY_USER_ORG')
def bintrayRepo = project.hasProperty('bintrayRepo') ? project.property('bintrayRepo') :
        System.getenv('BINTRAY_REPO')

//
//def bintrayPassphrase = project.hasProperty('bintray.gpg.password') ? project.property('bintray.gpg.password') :
//        System.getenv('BINTRAY_GPG_PASSWORD')

if (bintrayUser && bintrayKey && bintrayRepo) {

    def components = [
            rpm: [pat: '*.rpm'],
            deb: [pat: '*.deb'],
    ]

    def component = (
            project.hasProperty('component') ? project.property('component') :
            System.getenv('BINTRAY_UPLOAD_COMPONENT')
    )
    if (!component || !components.containsKey(component)) {
        throw new Exception(
                "Component for upload not specified or invalid (${component}). Use gradle property -Pcomponent or env var BINTRAY_UPLOAD_COMPONENT.\n" +
                "Valid values: ${components.keySet()}"
        )
    }

    apply plugin: 'com.jfrog.bintray'
    bintray {
        user = bintrayUser
        key = bintrayKey

        filesSpec {
            from("$buildDir/distributions") {
                include components[component].pat
            }

            into "."
        }

        dryRun = false
        publish = true
        override = true
        pkg {
            name = 'rundeck-cli'
            repo = bintrayRepo
            if(bintrayUserOrg) {
                userOrg = bintrayUserOrg
            }
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/rundeck/rundeck-cli.git'
            websiteUrl = 'https://github.com/rundeck/rundeck-cli'
            issueTrackerUrl = 'https://github.com/rundeck/rundeck-cli/issues'
            githubRepo = 'rundeck/rundeck-cli' //Optional Github repository
            githubReleaseNotesFile = 'README.md' //Optional Github readme file
            if(component=='deb'){
                debian {
                    distribution = 'any'
                    component = 'main'
                    architecture = 'noarch'
                }
            }
            version {
                name = rpmVersion
                desc = "Rundeck CLI Tools ${rpmVersion}"
                vcsTag = "v${rpmVersion}"
            }
        }
    }
}
